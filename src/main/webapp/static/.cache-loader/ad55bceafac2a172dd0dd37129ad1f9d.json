{"remainingRequest":"/Users/lee/work/project/autocar/auth/src/main/webapp/static/node_modules/babel-loader/lib/index.js!/Users/lee/work/project/autocar/auth/src/main/webapp/static/node_modules/eslint-loader/index.js??ref--5-0!/Users/lee/work/project/autocar/auth/src/main/webapp/static/app/component/redux/todo/reducers.jsx","dependencies":[{"path":"/Users/lee/work/project/autocar/auth/src/main/webapp/static/app/component/redux/todo/reducers.jsx","mtime":1524219416472},{"path":"/Users/lee/work/project/autocar/auth/src/main/webapp/static/.babelrc","mtime":1524219416457},{"path":"/Users/lee/work/project/autocar/auth/src/main/webapp/static/node_modules/cache-loader/dist/cjs.js","mtime":1524219602834},{"path":"/Users/lee/work/project/autocar/auth/src/main/webapp/static/node_modules/babel-loader/lib/index.js","mtime":1520329890000},{"path":"/Users/lee/work/project/autocar/auth/src/main/webapp/static/node_modules/eslint-loader/index.js","mtime":1519638534000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _redux = require('redux');\n\nvar _materialUi = require('material-ui');\n\nvar _actions = require('../actions.jsx');\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction visibilityFilter() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _actions.visilibityFilters.SHOW_ALL;\n    var action = arguments[1];\n\n    switch (action.type) {\n        case _actions.SET_VISIBILITY_FILTER:\n            return action.filter;\n        default:\n            return state;\n    }\n}\n\nfunction todos() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var action = arguments[1];\n\n\n    switch (action.type) {\n        case _actions.ADD_TODO:\n            return [].concat(_toConsumableArray(state), [{\n                text: action.text,\n                completed: false\n            }]);\n        case _actions.COMPLETED_TODO:\n            return [].concat(_toConsumableArray(state.slice(0, action.index)), [Object.assign({}, state[action.index], { completed: true })], _toConsumableArray(state.slice(action.index + 1)));\n        default:\n            return state;\n    }\n}\n\nvar todoApp = (0, _redux.combineReducers)({\n    visibilityFilter: visibilityFilter, todos: todos\n});\nexports.default = todoApp;",null]}